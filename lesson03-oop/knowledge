Rectangle: Class
	+ KDL đối tượng
	+ Chứa thuộc tính bên trong

Ex01RectangleDemo: Class
	+ Demo, chạy bài toán
	
bean: package chứa các class là KDL mình tạo ra để tạo đối tượng
	vd: Item, Rectangle, Employee
	
Vì sao các thuộc tính trong class KDL đối tượng Item, Employee thường phải để private?
	+ Tránh truy cập trực tiếp vào giá trị thuộc tính
	+ sử dụng getter, setter

Thông thường các access modifier của thuộc tính trong class KDL đối tượng là private vì:
	+ Không cho phép truy cập trực tiếp từ bên ngoài
	+ Chỉ có chính class đó quản lí thông tin thuộc tính của nó (idea of OOP)
	+ Nếu cho !private thì truy cập được ở những nơi khác --> giống FOP

--> private
	+ Nếu muốn truy cập:
		+ Hàm getter
		+ Hàm getter	
		
VD: getter, setter --> truy cập, thay đổi giá trị
 --> kiểm tra tính hợp lệ của tham số truyền vào trước khi gán giá trị cho thuộc tính
 
 setter --> bài toán Nhân viên & công ty
 	+ Nhân viên	: làm task từ khách hàng, khách hàng trả tiền về công ty
 				: nhận lương từ nhân viên
 	
 	+ Công ty	: Tìm dự án, deal thu nhập cho dự án, tìm task cho nhân viên
 				: Nhận tiền từ dự án
 				: Trả lương cho nhân viên
 				
 	Nhân viên
 	
 	
+ STATIC KEYWORD
	Đặt ở thuộc tính, hàm, (class)
	Biến, hàm có static thuộc phạm vi class, non-static thuộc phạm vi đối tượng
	Biến/hàm static khởi tạo trước biến/hàm non-static
		--> khi load class ---> biến/ hàm static được khởi tạo và lưu ở HEAP
	+ Thuộc tính:
		static: ko phụ thuộc vào đối tượng đang gọi (class level)
				giá trị dùng chung cho tất cả các đối tượng tạo ra từ cùng class chứa nó
		non-static: phụ thuộc đối tượng đang gọi
					giá trị được lưu trữ/ truy cập trên từng ô nhớ của đối tượng
	+ Phương thức:
		static: ko phụ thuộc đối tượng đang gọi
				chỉ phụ thuộc vào tham số truyền vào của hàm
		non-static:	phụ thuộc vào đối tượng đang gọi hàm
					phụ thuộc = hàm sử dụng giá trị của thuộc tính của đối tượng đang gọi
	