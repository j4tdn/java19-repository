Encapsulation(カプセル化)
+ private  : class scope
+ public   : every where
+ _______  : package scope
+ protected: package scope, ouside package by sub classes


Polymorphism

+ da hinh trong phuong thuc:
	***2 hay nhieu method la overloading neu:
	. cung 1 class
	. cung ten
	. khac data type cua tham so truyen vao 
	or khac so luong cua tham so
	
			//  sum 2 so nguyen
				private static int sum(int a, int b) {
					return a + b;
				}
				
			//  sum 3 so nguyen
				private static int sum(int a, int b, int c) {
					return a + b + c;
				}
				
			//	sum 2 so thuc
				private static double sum(double a, double b) {
					return a + b;
				}

	***2 hay nhieu method la overriding neu:
	method trong lop cha duoc override lai trong 1 or nhieu lop con
	
+ da hinh trong doi tuong
	cha c = new con;
	luc la the hien nay, luc la the hien khac
	la 1 bien KDL doi tuong, luc runtime co the hien la chinh no hoac
	la the hien cua KDL lop con

**why khong: con c = new con ???
// Person --> baby, student, employee, member
	Person p = new Student();
	Person p = new Employee();
	
1. de dang ep KDL cha --> con
2. factory pattern
3. co the tao ra array co KDL cha, element co the la cha or con
 Square[] squares = { square, rectangle};
 

