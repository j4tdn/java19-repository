-- Phần A. Viết các lệnh để xây dựng mô hình thực thể kết hợp (ER) dựa vào mô tả trên

CREATE DATABASE COMPANY_MANAGEMENT;

-- CREATE TABLE DEPARTMENT
DROP TABLE IF EXISTS DEPARTMENT;
CREATE TABLE IF NOT EXISTS DEPARTMENT (
    ID INT PRIMARY KEY,
    `NAME` VARCHAR(255) UNIQUE,
    MANAGER_ID INT
);

-- CREATE TABLE EMPLOYEE
DROP TABLE IF EXISTS EMPLOYEE;
CREATE TABLE IF NOT EXISTS EMPLOYEE (
    ID INT PRIMARY KEY,
    FULLNAME VARCHAR(255),
    ADDRESS VARCHAR(255),
    SALARY DECIMAL(10, 2),
    GENDER VARCHAR(10),
    DOB DATE,
    JOIN_DATE DATE,
    DEPARTMENT_ID INT,
    SUPERVISOR_ID INT,
    CONSTRAINT FK_EMPLOYEE_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(ID),
    CONSTRAINT FK_EMPLOYEE_EMPLOYEE FOREIGN KEY (SUPERVISOR_ID) REFERENCES EMPLOYEE(ID)
);

ALTER TABLE EMPLOYEE
MODIFY COLUMN SALARY DECIMAL(15, 2);

ALTER TABLE DEPARTMENT
ADD CONSTRAINT FK_DEPARTMENT_EMPLOYEE
FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEE(ID);

-- CREATE TABLE DEPARTMENT_MANAGER
DROP TABLE IF EXISTS DEPARTMENT_MANAGER;
CREATE TABLE IF NOT EXISTS DEPARTMENT_MANAGER (
    EMPLOYEE_ID INT PRIMARY KEY,
    DEPARTMENT_ID INT,
    START_DATE DATE,
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(ID),
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(ID)
);


-- CREATE TABLE PROJECT
DROP TABLE IF EXISTS PROJECT;
CREATE TABLE IF NOT EXISTS PROJECT (
    ID INT PRIMARY KEY,
    `NAME` VARCHAR(255) UNIQUE,
    START_DATE DATE,
    END_DATE DATE,
    REVENUE DECIMAL(15, 2)
);

-- CREATE TABLE PROJECT_MANAGER
DROP TABLE IF EXISTS PROJECT_MANAGER;
CREATE TABLE IF NOT EXISTS PROJECT_MANAGER (
    EMPLOYEE_ID INT,
    PROJECT_ID INT,
    PRIMARY KEY (EMPLOYEE_ID, PROJECT_ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(ID),
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(ID)
);


-- CREATE TABLE WORK_HOURS
DROP TABLE IF EXISTS WORK_HOURS;
CREATE TABLE IF NOT EXISTS WORK_HOURS (
    EMPLOYEE_ID INT,
    PROJECT_ID INT,
    HOURS_WORK INT,
    PRIMARY KEY (EMPLOYEE_ID, PROJECT_ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(ID),
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(ID)
);

-- ================================================================================================= --
-- Phần B. Viết các lệnh để tạo dữ liệu kiểm thử cho dự án
SET FOREIGN_KEY_CHECKS = 0;

-- DEPARTMENT
INSERT INTO DEPARTMENT (ID, `NAME`, MANAGER_ID) VALUES
(1, 'HR Department', 101),
(2, 'IT Department', 102),
(3, 'Finance Department', 103),
(4, 'Marketing Department', 104);

SET FOREIGN_KEY_CHECKS = 1;
-- EMPLOYEE
INSERT INTO EMPLOYEE (ID, FULLNAME, ADDRESS, SALARY, GENDER, DOB, JOIN_DATE, DEPARTMENT_ID, SUPERVISOR_ID) VALUES
(101, 'Nguyen Van A', '1 Nguyen Luong Bang', 8000000.00, 'Male', '2002-01-15', '2023-05-20', 1, NULL),
(102, 'Nguyen Van B', '2 Nguyen Huu Tho', 10000000.00, 'Female', '2002-03-22', '2018-08-10', 3, 101),
(103, 'Nguyen Van C', '3 Ton Duc Thang', 4000000.00, 'Male', '2002-12-10', '2019-02-28', 3, 102),
(104, 'Nguyen Van D', '4 Nguyen Van Linh', 22000000.00, 'Female', '2002-07-05', '2018-04-15', 3, 103),
(105, 'Nguyen Van E', '5 Nui Thanh', 300000000.00, 'Male', '2002-09-30', '2019-11-01', 4, 104);

-- DEPARTMENT_MANAGER
INSERT INTO DEPARTMENT_MANAGER (EMPLOYEE_ID, DEPARTMENT_ID, START_DATE) VALUES
(101, 1, '2019-05-20'),
(102, 2, '2019-08-10'),
(103, 3, '2020-02-28'),
(104, 4, '2019-04-15'),
(105, 5, '2022-11-01');


-- PROJECT
INSERT INTO PROJECT (ID, NAME, START_DATE, END_DATE, REVENUE) VALUES
(201, 'HR System', '2020-01-01', '2020-06-30', 100000000.00),
(202, 'IT Infrastructure Overhaul', '2021-03-15', '2022-01-30', 15000000.00),
(203, 'Financial Software Implementation', '2019-07-01', '2020-12-31', 12000000.00),
(204, 'Marketing Campaign Launch', '2022-05-10', '2022-11-30', 8000000.00),
(205, 'Operations Efficiency Project', '2021-09-01', '2022-04-30', 11000000.00),
(206, 'Game Project', '2021-09-01', '2022-04-30', 11000000.00),
(207, 'ABC Project', '2021-09-01', '2022-04-30', 11000000.00);

-- PROJECT_MANAGER
INSERT INTO PROJECT_MANAGER (EMPLOYEE_ID, PROJECT_ID) VALUES
(101, 201),
(102, 202),
(103, 203),
(104, 204),
(105, 205),
(105, 206);

-- WORK_HOURS
INSERT INTO WORK_HOURS (EMPLOYEE_ID, PROJECT_ID, HOURS_WORK) VALUES
(101, 201, 66),
(102, 202, 77),
(103, 203, 55),
(104, 204, 99),
(105, 205, 44);


-- ======================================================================================================= --
-- Phần C. Thực hiện truy vấn

-- 1. Liệt kê các dự án diễn ra trong năm *?* có số tiền thu được trên *?* triệu VND

SELECT * FROM PROJECT 
	WHERE year(START_DATE) = 2020 ||
		year(END_DATE) = 2020
	AND REVENUE > 12000000.00;
    
-- 2. Liệt kê các nhân viên đã tham gia hơn ?*? giờ trong các dự án, hiển thị chi tiết số giờ trong mỗi dự án mà nhân viên tham gia

SELECT 	EMPLOYEE.ID,
		EMPLOYEE.FULLNAME,
		WORK_HOURS.HOURS_WORK
	FROM EMPLOYEE
	JOIN WORK_HOURS ON EMPLOYEE.ID = WORK_HOURS.EMPLOYEE_ID
                     WHERE WORK_HOURS.HOURS_WORK > 60;
                     
-- 3. Liệt kê các nhân viên có mức lương >= mức lương của người giám sát/quản lý trực tiếp nhân viên đó

SELECT
	e.FULLNAME,
    e.SALARY,
    e2.FULLNAME,
    e2.SALARY
FROM EMPLOYEE e
JOIN EMPLOYEE e2 ON e.ID = e2.SUPERVISOR_ID
WHERE e.SALARY > e2.SALARY;

-- 4. Liệt kê các phòng ban có số lượng nhân viên lớn hơn *?*

SELECT DEPARTMENT.ID, DEPARTMENT.NAME, COUNT(EMPLOYEE.ID) AS AMOUNT_OF_EMPLOYEE
FROM DEPARTMENT
JOIN EMPLOYEE ON DEPARTMENT.ID = EMPLOYEE.DEPARTMENT_ID
GROUP BY DEPARTMENT.ID, DEPARTMENT.NAME
HAVING AMOUNT_OF_EMPLOYEE > 2;

-- 5. Liệt kê các nhân viên đã làm việc cho công ty hơn ?*? năm

SELECT *
FROM EMPLOYEE
WHERE YEAR(NOW()) - YEAR(JOIN_DATE) > 4;

-- 6. Liệt kê các nhân viên vừa là trưởng phòng ban, và là quản lý dự án

SELECT e.FULLNAME, d.NAME AS DEPARTMENT_NAME, p.NAME AS PROJECT_NAME
FROM EMPLOYEE e
JOIN DEPARTMENT d ON e.ID = d.MANAGER_ID
JOIN PROJECT_MANAGER pm ON e.ID = pm.EMPLOYEE_ID
JOIN PROJECT p ON pm.PROJECT_ID = p.ID;

-- 7. Liệt kê các nhân viên quản lý nhiều hơn 1 dự án

SELECT e.FULLNAME, COUNT(DISTINCT pm.PROJECT_ID) AS NUM_PROJECTS_MANAGED
FROM EMPLOYEE e
JOIN PROJECT_MANAGER pm ON e.ID = pm.EMPLOYEE_ID
GROUP BY e.ID, e.FULLNAME
HAVING NUM_PROJECTS_MANAGED > 1;
