--> khai báo biến, hàm (cơ bản)
--> Nhập dữ liệu, random

--> Xử lý chức năng
	- Cấu trúc điều kiện, vòng lặp

--> chức năng --> nhập vào tham số là 1 dẫy(tập) các số nguyên N
-->testing: 100 số -- th1: nhập từng số
                      th2: lấy sữ liệu ngẫu nhiên
                        --> Code đoạn code để tạo ra 100 số ngẫu nhiên

+ if if else else if
+ tenary operator --> toán tử 3 ngôi
+ switch case --> if else ==
 	+ break: switch case có break, thoát khỏi switch case khi gặp break
 	+ non-break: sau khi switch đúng case đầu tiên thì nó nhảy vào body
 	của các case tiêos theo bên dưới mà ko cần kiểm tra điều kiện
 	--> kết thúc khi gặp break hoặc xong phần dèfaut
 
+duyệt:
	.for -> duyệt mảng, danh sách
	.while -> code logic
	.do while -> code logic, tối thiểu thực hiện do 1 lần



KDL nguyên thuỷ
+ dùng để lưu trữ dữ liệu(đơn) tại cùng nhớ stack
+ sử sụng kiểu dữ liệu có sẵn của java
+ lưu trữ dữ liệu đơn
VD: số nguyên , số thực , kí tự
int:  số nguyên -> 4 bytes -> Bit, byte, kb, mg, giga,tega
long: số nguyên -> 8 bytes
float: số thực
char: kí tự 
=============================================
KDL đối tượng
+Dùng để lưu trữ dữ liệu (đơn, đa)
+sử sụng kiểu dữ liệu 
		- có sẵn: Integer, Character, Float, String, Boolean
		--> Khởi tạo giá trị(đối tượng)--> dùng từ khoá new --> gọi hàm khởi tạo
		--> Không cần new
		
 		- tự định nghĩa: Item
 		--> Khởi tạo giá trị(đối tượng)--> dùng từ khoá new --> gọi hàm khởi tạo
+ Giá trị lưu trữ ở vùng nhớ HEAP
Vd: Khai báo kdl Mặt hàng : mã mặt hàng , tên mặt hàng, giá bán
Item : id , name, price
Giá trị của ô nhớ Item trỏ đến luôn: có 3 giá trị id , name, price
=============================================
==> Phân biệt int, Integer
Giống:
Lưu trữ
khác:
		int: luôn luôn có giá trị(mặc định = 0)
		     không hỗ trợ hàm
		Integer: có thể lưu giá trị hoặc không (null_
				 hỗ trợ các hàm tiện ích min, max, parse
				 
				 
